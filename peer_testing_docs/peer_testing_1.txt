Brief Description

For peer testing one, we created a if-this-then-that style interface to interact with the Minecraft Education Client. This tool is meant for Minecraft Education players, typically 4th grade to 12th grade students, to learn the fundamental idea of an if-then statement. Using our tool, students can select an event to listen and a response if that event occurs. Once the player is done with their Minecraft session, they can view the statistics page like what events occurred most often.

Participants in the Study and Associated Video [ 8 ]

First Name
(Tester)
Last Name
(Tester)
Host
Status
Type of Evaluation
Link to recording
Katrina
Martel
Matthew C.
Completed
Remote
Link
Jeff
Hatton
Matthew C.
Completed
Think-aloud
Link
Brandon
Gaucher
Andrew D.
Completed
Remote
Link
Kathryn
Lecha
Andrew D.
Completed
Think-aloud
Link
Eloise
Espel
Carson P.
Completed
Remote
Link
Jinyang
Yao
Carson P.
Completed
Think-aloud
Link
Jodi
Chan
Callum T.
Completed
Remote
Link
Lucas
Pozza
Callum T.
Completed
Think-aloud
Link

User Groups and Associated Tasks

Minecraft Education Player (4th grade to 12th grade)
1. Connect the interface to the Minecraft Education Client
2. Explore the events and responses you could listen for in our app
3. Make it so whenever you place a block, a chicken spawns
4. Make it so whenever you bounce on a slime block, the weather changes
5. Close the connection with the Minecraft Client
6. Close the application window
7. View the session statistics
8. Exit the program
9. Experiment with the possibilities the interface provides

List of Issues Discovered
High Priority
Statistics page doesn’t contain enough information for the player
Close Button should close the program, separate button should bring up statistics
Run button provides no feedback(pop messages, window etc)
Medium Priority
Command description could be more descriptive and precise.
Include optional documentation for users that are curious
The statistics page could be more polished and organized	
Low Priority
Command list needs more visibility
There wasn’t enough detail given about this issue as other testers' responses contradict it by complimenting the simplicity of the interface, and its ease of use.
Allows you to hit the run button when nothing is selected
Add a back button to the statistics page

Quantitative Scores


System Status Visibility
Score: 3.750
We received good feedback in regards to how easily users could understand the status of the system. Although many users noted how the system was intuitive, we did receive some comments that we should implement “Feedback when the run button is pushed.” As a result, we consider this one of our higher priority issues.

Matches the Real World
Score: 4.625
We received lots of comments about how much our CSS work resembles real world Minecraft textures and applications: “I like that the aesthetics of the system are consistent with Minecraft's”; “I really like the styling, it matches the game really well”. As a result, we feel that our application is strong in this regard and our score reflects that. One issue that we have given ourselves is that we could better organize our statistics page as it could serve to benefit the user more.

Gives User Freedom & Control
Score: 4.375
One user commented that, “the commands were simple and allowed me to interact with the system”. Which reflects the fact that the simplicity of our system works to give the user freedom to do what our system is capable of doing. As stated on our list of medium priority issues, we are looking to add detailed descriptions for what each event/response is just in case the user wanted to know in more detail.

Consistency & Standards
Score: 4.500
We received lots of comments about how our CSS is aesthetically consistent with other Minecraft applications. One thing that a tester commented on was that we should change our close button: “Instead of saying "close" on the button, I would say ‘view statistics’”. This makes sense as the close button wording indicates that it would behave differently than expected. As a result, we listed this as an issue with high priority.

Error Prevention
Score: 5.000
Not once in our testing did our system break or not function as expected. One of our comments was notably impressed with our error prevention: “I was impressed by how well it worked, everything you promised was there with no bugs nor lags”. As a result, we do not have any critical errors that need to be handled in our list of issues.

Recognition over Recall
Score: 4.125
Testers noted that the simplicity of the system enabled them to use our app intuitively and that there are even fun elements of discovery: “intuitive event/response relationship with just enough uncertainty to stimulate curiosity.” Consequently, testers were able to complete tasks with little to no instructions on how to accomplish them. One issue related to recognition is how the close button might indicate to users that the application will be closed instead of simply that window being closed. 

Flexibility & Efficiency of Use
Score: 4.625
We received lots of comments about our system's simplicity: “It looks fantastic and is very simple to use”; “I like how clear the system is with certain events causing actions”. The system is designed to be obvious to the user in how to use it. This makes our system efficient to use and, simultaneously, ensures that the user can see all available options. In regard to our issues, we are planning to add more depth to the option menu such that the user could look deeper into what is happening in the backend if they are curious.

Aesthetic and Minimalist Design
Score: 4.75
Part of our design goals were to have a simple user interface such that the user would know what to do by just looking at it. We think that we accomplished this as our testers complimented our aesthetic and simplicity: “I like that the aesthetics of the system are consistent with Minecraft's. It is also simple to use and understand.” Consequently, we do not have any issues related to making our UI any more minimalist than it already is.

Help and Recovery From Errors
Score: 3.375
One error that occurred was that the close button functioned slightly differently than the users expected as it closed the event selection page and opened the statistics page rather than closing the entire application. One other thing we noted is that, should the user accidentally hit the close button, they would have no way to recover from that error. Thus, we have included on our low priority list to include a back button on the event screen. 

Help and Documentation
Score: 3.375
Our application included a minimal amount of documentation as we wanted to keep the design simple. Some suggestions we received were to include optional documentation to describe the specifics of each event and response. This is something that we have marked as a medium priority on our issues page.


Links to view data collected
https://docs.google.com/spreadsheets/d/1AUbYjChZGpuIovBAFpb6aE9MwFDrZsjW2AooyHNWeWI/edit?usp=sharing
https://docs.google.com/spreadsheets/d/1LkILMTU4hbE2MJpTp1DCFMsDsLbBCF11eHgFMam3rAE/edit?usp=sharing

